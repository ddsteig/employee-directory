{"version":3,"sources":["components/EmployeeTable.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","employees","config","React","useState","sortConfig","setSortConfig","useMemo","sortableEmployees","sort","a","b","key","direction","requestSort","useSortableData","allemployees","getClassNamesFor","name","undefined","searchTerm","setSearchTerm","type","placeholder","value","onChange","event","target","className","onClick","filter","person","first","toLowerCase","includes","toLocaleLowerCase","map","newperson","src","picture","alt","last","company","age","phone","email","id","App","EmployeeList","ReactDOM","render","document","getElementById","exact","path","component","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"gkJAqHeA,EAjFO,SAACC,GAAW,IAAD,EAlCT,SAACC,GAA8B,IAAnBC,EAAkB,uDAAT,KAAS,EAChBC,IAAMC,SAASF,GADC,mBAC7CG,EAD6C,KACjCC,EADiC,KA+BpD,MAAO,CAAEL,UA5BeE,IAAMI,SAAQ,WACpC,IAAIC,EAAiB,YAAOP,GAY5B,OAXmB,OAAfI,GACFG,EAAkBC,MAAK,SAACC,EAAGC,GACzB,OAAID,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACH,cAAzBP,EAAWQ,WAA6B,EAAI,EAEjDH,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACH,cAAzBP,EAAWQ,UAA4B,GAAK,EAE9C,KAGJL,IACN,CAACP,EAAWI,IAcsBS,YAZjB,SAACF,GACnB,IAAIC,EAAY,YAEdR,GACAA,EAAWO,MAAQA,GACM,cAAzBP,EAAWQ,YAEXA,EAAY,cAEdP,EAAc,CAAEM,MAAKC,eAG2BR,cAIHU,CAAgBf,EAAMgB,cAA7Df,EADuB,EACvBA,UAAWa,EADY,EACZA,YAAaT,EADD,EACCA,WAC1BY,EAAmB,SAACC,GACxB,GAAKb,EAGL,OAAOA,EAAWO,MAAQM,EAAOb,EAAWQ,eAAYM,GAN3B,EASKhB,IAAMC,SAAS,IATpB,mBASxBgB,EATwB,KASZC,EATY,KAc/B,OAEE,gCACE,8BACE,uBACEC,KAAK,OACLC,YAAY,uBACZC,MAAOJ,EACPK,SAZa,SAAAC,GACnBL,EAAcK,EAAMC,OAAOH,YAezB,wBAAOI,UAAU,2BAAjB,UAEE,gCACE,+BACE,uCACA,6BACE,wBACEN,KAAK,SACLO,QAAS,kBAAMf,EAAY,UAC3Bc,UAAWX,EAAiB,SAH9B,oBAQF,6BACE,wBACEK,KAAK,SACLO,QAAS,kBAAMf,EAAY,YAC3Bc,UAAWX,EAAiB,WAH9B,uBAQF,6BACE,wBACEK,KAAK,SACLO,QAAS,kBAAMf,EAAY,QAC3Bc,UAAWX,EAAiB,OAH9B,mBAQF,yCACA,4CAGJ,gCAEGhB,EAAU6B,QAAQ,SAAAC,GAAM,OAAIA,EAAOC,MAAMC,cAAcC,SAASd,EAAWe,wBAAuBC,KAAI,SAAAC,GAAS,OAC9G,+BACE,6BAAI,qBAAKC,IAAKD,EAAUE,QAASX,UAAU,eAAeY,IAAI,UAC9D,uCAAQH,EAAUL,MAAlB,YAA2BK,EAAUI,QACrC,6BAAKJ,EAAUK,UACf,6BAAKL,EAAUM,MACf,6BAAKN,EAAUO,QACf,6BAAKP,EAAUQ,UANRR,EAAUS,gBC9FhB,SAASC,IACtB,OACE,qBAAKnB,UAAU,MAAf,SAEE,cAAC,EAAD,CAAeZ,aAAcgC,MAMnCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SCMlCL,MAlBf,WACE,OACF,gCACM,wBAAQnB,UAAU,aAAlB,SACA,sDAKA,+BACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,IAAIC,UAAWC,YCJ5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdT,IAASC,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFf,SAASC,eAAe,SAM1BK,M","file":"static/js/main.048a57e1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst useSortableData = (employees, config = null) => {\r\n  const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n  const sortedEmployees = React.useMemo(() => {\r\n    let sortableEmployees = [...employees];\r\n    if (sortConfig !== null) {\r\n      sortableEmployees.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableEmployees;\r\n  }, [employees, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'ascending';\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === 'ascending'\r\n    ) {\r\n      direction = 'descending';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { employees: sortedEmployees, requestSort, sortConfig };\r\n};\r\n\r\nconst EmployeeTable = (props) => {\r\n  const { employees, requestSort, sortConfig } = useSortableData(props.allemployees);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const handleChange = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search By First Name\"\r\n          value={searchTerm}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <table className=\"striped responsive-table\">\r\n\r\n        <thead>\r\n          <tr>\r\n            <th>Image</th>\r\n            <th>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => requestSort('first')}\r\n                className={getClassNamesFor('first')}\r\n              >\r\n                Name\r\n          </button>\r\n            </th>\r\n            <th>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => requestSort('company')}\r\n                className={getClassNamesFor('company')}\r\n              >\r\n                Company\r\n          </button>\r\n            </th>\r\n            <th>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => requestSort('age')}\r\n                className={getClassNamesFor('age')}\r\n              >\r\n                Age\r\n          </button>\r\n            </th>\r\n            <th>Phone #</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n          {employees.filter((person => person.first.toLowerCase().includes(searchTerm.toLocaleLowerCase()))).map(newperson => (\r\n            <tr key={newperson.id}>\r\n              <td><img src={newperson.picture} className=\"card-img-top\" alt=\"...\" /></td>\r\n              <td>{`${newperson.first} ${newperson.last}`}</td>\r\n              <td>{newperson.company}</td>\r\n              <td>{newperson.age}</td>\r\n              <td>{newperson.phone}</td>\r\n              <td>{newperson.email}</td>\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default EmployeeTable;\r\n\r\n","import React from 'react';\r\nimport EmployeeList from \"../seed/employees\"\r\nimport EmployeeTable from \"../components/EmployeeTable\"\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <EmployeeTable allemployees={EmployeeList} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n<div>\n      <header className=\"App-header\">\n      <h1>Employee Directory</h1>\n        {/* <Router>\n          <Route exact path=\"/\" component={Home} />\n        </Router> */}\n      </header>\n      <body>\n      <Router>\n          <Route exact path=\"/\" component={Home} />\n        </Router>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}